/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

/* custom styles */
/* defaults */
* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html,
body {
  height: 100%; }

body {
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  line-height: 1.4;
  margin: 0;
  background-color: #fff; }

img {
  max-width: 100%;
  height: auto; }

table {
  border-collapse: collapse;
  margin: 0;
  padding: 0;
  width: 100%;
  table-layout: fixed; }

.wrapper {
  display: table;
  table-layout: fixed;
  width: 100%;
  min-height: 100%; }

.container {
  max-width: 1024px;
  margin: 0 auto;
  padding: 0 15px; }

.text-center {
  text-align: center !important; }

.text-right {
  text-align: right !important; }

.hidden {
  display: none !important; }

/* header */
.header {
  padding-top: 20px; }

.slick-slide:focus {
  outline: none; }

.slider-for .slick-slide {
  padding: 0 3px; }

.slider-nav {
  border-bottom: 1px solid #eaeaea; }
  .slider-nav .slick-track {
    display: table;
    width: 150%; }
    @media (min-width: 1024px) {
      .slider-nav .slick-track {
        max-width: 80%;
        margin-left: 20%;
        margin-right: 0; } }
  .slider-nav .slick-slide {
    position: relative;
    display: table-cell;
    width: 33.333%;
    font-size: 17px;
    text-transform: uppercase;
    color: #b9b9b9;
    padding: 3px 10px;
    text-align: center;
    vertical-align: middle;
    float: none; }
    @media (min-width: 1024px) {
      .slider-nav .slick-slide {
        width: auto !important;
        padding: 5px 20px;
        display: inline-block;
        vertical-align: middle; } }
    .slider-nav .slick-slide.slick-current {
      color: #213298; }
      .slider-nav .slick-slide.slick-current:after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 0;
        right: 0;
        height: 2px;
        background-color: #213298; }

/*  first page  */
.highlights-img {
  padding-bottom: 45%;
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center center;
  margin-bottom: 20px; }
  @media (min-width: 1024px) {
    .highlights-img {
      padding-bottom: 20%; } }

.highlights-top:before, .highlights-top:after {
  content: " ";
  display: table; }

.highlights-top:after {
  clear: both; }

.highlights-top .heading-h2:before, .highlights-top .heading-h2:after {
  content: " ";
  display: table; }

.highlights-top .heading-h2:after {
  clear: both; }

.highlights-top .heading-h2 span {
  width: 72%;
  float: left;
  padding-right: 9px; }
  @media (min-width: 1024px) {
    .highlights-top .heading-h2 span {
      float: none;
      width: 100%;
      display: block;
      padding-right: 0; } }
  .highlights-top .heading-h2 span + span {
    width: 28%;
    padding-right: 0; }
    @media (min-width: 1024px) {
      .highlights-top .heading-h2 span + span {
        width: 100%;
        display: block;
        text-transform: none; } }

@media (min-width: 1024px) {
  .highlights-top .heading-h2 {
    padding: 60px 20%;
    text-align: center;
    font-size: 25px;
    text-transform: uppercase; } }

.highlights-date {
  padding-top: 5px;
  width: 27%;
  font-size: 15px;
  float: left;
  color: #7c7c7c; }
  @media (min-width: 1024px) {
    .highlights-date {
      width: auto;
      float: none;
      display: block;
      text-align: center; } }

@media (min-width: 1024px) {
  .highlights-info {
    padding: 20px;
    background-color: #f8f8f8; } }

.highlights-item {
  padding-bottom: 40px;
  border-bottom: 1px solid #d8d8d8;
  margin-bottom: 45px; }
  @media (min-width: 1024px) {
    .highlights-item {
      padding: 0;
      border: 1px solid #d8d8d8; } }
  @media (min-width: 1024px) {
    .highlights-item-left, .highlights-item-right {
      float: left; } }
  @media (min-width: 1024px) {
    .highlights-item-left {
      width: 35%; } }
  @media (min-width: 1024px) {
    .highlights-item-right {
      width: 65%;
      padding-left: 25px;
      overflow-x: hidden;
      white-space: nowrap; } }
  @media (min-width: 1024px) {
    .highlights-item-right .highlights-item {
      width: 65%;
      display: inline-block;
      vertical-align: top;
      margin-right: 25px;
      white-space: normal; } }

.highlights-title {
  color: #000;
  font-size: 16px;
  padding-bottom: 10px;
  border-bottom: 2px solid #999;
  margin: 0 0 20px; }
  @media (min-width: 1024px) {
    .highlights-title {
      border-bottom: none;
      padding: 0;
      margin-bottom: 10px; } }

.highlights-heading {
  font-size: 18px;
  color: #213298;
  margin: 0 0 15px; }
  .highlights-heading:before, .highlights-heading:after {
    content: " ";
    display: table; }
  .highlights-heading:after {
    clear: both; }
  @media (min-width: 1024px) {
    .highlights-heading {
      margin: 0;
      padding: 20px 20px 10px; } }

.highlights-text {
  float: left; }
  @media (min-width: 1024px) {
    .highlights-text {
      float: none;
      display: block; } }

.highlights-icon {
  float: right; }
  @media (min-width: 1024px) {
    .highlights-icon {
      float: none;
      display: block;
      text-align: right; } }
  .highlights-icon svg {
    color: #999999;
    width: 15px;
    height: 25px; }

/* second page */
.story-content:before, .story-content:after {
  content: " ";
  display: table; }

.story-content:after {
  clear: both; }

.story-item {
  padding-right: 15px; }
  @media (min-width: 768px) {
    .story-item {
      width: 50%;
      float: left; } }

/* third page*/
.solutions {
  min-height: .01%;
  overflow-x: auto; }
  @media screen and (max-width: 700px) {
    .solutions {
      margin: 0 -15px; } }
  .solutions-table {
    width: 100%;
    max-width: 100%;
    border-spacing: 0;
    border-bottom: 1px solid #000; }
    @media screen and (max-width: 700px) {
      .solutions-table {
        border-bottom: 1px solid #d8d8d8; } }
    @media screen and (max-width: 700px) {
      .solutions-table tr {
        display: block; } }
    .solutions-table th,
    .solutions-table td {
      font-size: 9px;
      padding: 5px 10px 5px 0;
      text-align: left; }
      @media screen and (max-width: 700px) {
        .solutions-table th,
        .solutions-table td {
          font-size: 16px;
          padding-top: 15px;
          padding-bottom: 15px; } }
    @media screen and (max-width: 700px) {
      .solutions-table td {
        border-bottom: 1px solid #eaeaea;
        display: block; } }
    @media screen and (max-width: 700px) {
      .solutions-table td[data-label] {
        text-align: right; } }
    @media screen and (max-width: 700px) {
      .solutions-table td[data-label]:before {
        content: attr(data-label);
        float: left; } }
    @media screen and (max-width: 700px) {
      .solutions-table td:last-child {
        border-bottom: 0; } }
    @media screen and (max-width: 700px) {
      .solutions-table thead {
        border: none;
        clip: rect(0 0 0 0);
        height: 1px;
        margin: -1px;
        overflow: hidden;
        padding: 0;
        position: absolute;
        width: 1px; } }
    .solutions-table thead th {
      border-top: 1px solid #000;
      border-bottom: 1px solid #000; }
    @media screen and (max-width: 700px) {
      .solutions-table .section-tr td {
        text-align: left;
        border-bottom: 1px solid #eaeaea; } }
    .solutions-table .section-tr td[colspan] {
      border-bottom: 1px solid #000;
      text-transform: uppercase;
      padding-top: 15px; }
      @media screen and (max-width: 700px) {
        .solutions-table .section-tr td[colspan] {
          border-bottom: none;
          padding-left: 20px; } }
    @media screen and (max-width: 700px) {
      .solutions-table .accordion-content {
        padding: 0;
        height: 0;
        overflow-x: hidden;
        padding-left: 40px;
        padding-right: 40px; } }
    @media screen and (max-width: 700px) {
      .solutions-table .accordion-collapse {
        padding-left: 40px;
        font-weight: 500;
        background-color: #f7f7f7;
        border-top: 1px solid #d8d8d8;
        border-bottom: none;
        position: relative;
        -webkit-transition: background-color 0.3s;
        -o-transition: background-color 0.3s;
        transition: background-color 0.3s; } }
    @media screen and (max-width: 700px) {
      .solutions-table .accordion-collapse.in {
        background-color: #ffffff;
        border: none; } }
    @media screen and (max-width: 700px) {
      .solutions-table .accordion-collapse.in svg {
        -webkit-transform: rotate(90deg);
            -ms-transform: rotate(90deg);
                transform: rotate(90deg); } }
    .solutions-table .accordion-collapse svg {
      display: none; }
      @media screen and (max-width: 700px) {
        .solutions-table .accordion-collapse svg {
          display: block;
          position: absolute;
          top: 19px;
          left: 20px;
          color: #999999;
          -webkit-transition: -webkit-transform 0.3s;
          transition: -webkit-transform 0.3s;
          -o-transition: transform 0.3s;
          transition: transform 0.3s;
          transition: transform 0.3s, -webkit-transform 0.3s; } }

.heading-h1,
h1 {
  font-size: 20px;
  font-weight: 700;
  text-transform: uppercase;
  color: #213298;
  margin-bottom: 20px; }

.heading-h2 {
  font-size: 20px;
  font-weight: 400;
  color: #213298;
  margin-bottom: 20px; }

.story-heading,
.heading-h3,
h3 {
  font-size: 16px;
  font-weight: 700;
  margin: 0 0 15px;
  color: #002a87; }

.story-heading {
  padding-bottom: 10px;
  border-bottom: 2px solid #000; }

.solutions-heading {
  padding: 50px 80px;
  text-transform: uppercase;
  font-weight: 700;
  margin: 0; }
  @media screen and (max-width: 700px) {
    .solutions-heading {
      padding: 30px; } }

/* svg icons */
.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor; }

p {
  margin: 0 0 10px; }

h1 {
  font-size: 25px;
  line-height: 1.4; }

h2 {
  font-size: 22px;
  line-height: 1.4; }

h3 {
  font-size: 20px;
  line-height: 1.4; }

h1,
h2,
h3 {
  margin: 20px 0 10px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
